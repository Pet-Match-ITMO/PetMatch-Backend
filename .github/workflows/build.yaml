name: build

permissions:
    contents: read
    packages: write

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    test:
        uses: ./.github/workflows/test.yaml
    
    build-test:
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'pull_request'
        steps:
            - uses: actions/checkout@v4
            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                push: true
                tags: ghcr.io/pet-match-itmo/backend:test-${{ github.sha }}
    
    build:
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'push'
        steps:
            - uses: actions/checkout@v4
            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                push: true
                tags: |
                  ghcr.io/pet-match-itmo/backend:latest
                  ghcr.io/pet-match-itmo/backend:${{ github.sha }}
    
    deploy:
        runs-on: ubuntu-latest
        needs: build
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        steps:
            - name: Deploy to server
              uses: appleboy/ssh-action@v1.0.3
              with:
                host: ${{ secrets.SERVER_HOST }}
                username: ${{ secrets.SERVER_USER }}
                key: ${{ secrets.SERVER_SSH_KEY }}
                port: ${{ secrets.SERVER_PORT || 22 }}
                script: |
                  cd ${{ secrets.SERVER_PROJECT_PATH }}
                  git pull origin main
                  
                  # Экспортируем все переменные окружения
                  export DB_URL="${{ secrets.DB_URL }}"
                  export POSTGRES_DB="${{ secrets.POSTGRES_DB }}"
                  export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
                  export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
                  export JWT_SECRET="${{ secrets.JWT_SECRET }}"
                  export QUART_SCHEMA_CONVERT_CASING="${{ secrets.QUART_SCHEMA_CONVERT_CASING }}"
                  export GHCR_TOKEN="${{ secrets.GHCR_TOKEN }}"
                  export GHCR_USERNAME="${{ secrets.GHCR_USERNAME }}"
                  
                  # Запускаем деплой (автоматически сгенерирует .env)
                  ./deploy.sh
